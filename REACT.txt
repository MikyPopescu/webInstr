REACT 
//REACT - editare robot - Obiect.js - Editare se face prin functie de editare si vizualizare//
class Robot extends Component {
	constructor(props){
		super(props)
		let {item} = this.props
		this.state = {
			name : item.name,
			type : item.type, //
			mass : item.mass,
			isEditing : false
		}
		this.handleChange = (evt) => {
			this.setState({
				[evt.target.name] : evt.target.value //
			})
		}
	}
    render() { //render afiseaza componente 
  	let {item} = this.props
  	if (this.state.isEditing){
  		return (
				<div>
						Hello, my name is 
    <input type="text" id="type" name="type" onChange={this.handleChange} value={this.state.type} />
						. I am a 
    <input type="text" id="name" name="name" onChange={this.handleChange} value={this.state.name} />
					 	and weigh     										     <input type="text" id="mass" name="mass" onChange={this.handleChange} value={this.state.mass} />
						<input type="button" value="save" onClick={() => {
							this.props.onSave(item.id, {
								name : this.state.name,
								type : this.state.type,
								mass : this.state.mass
							})
							this.setState({isEditing : false})
							}
						} />
		  			<input type="button" value="cancel" onClick={() => this.setState({isEditing : false})} />						
					</div>	    	
  		)
  	}
  	else{
  		return (
		      <div>
			  		Hello, my name is {item.name}. I am a {item.type} and weigh {item.mass}
			  		<input type="button" value="edit" onClick={() => this.setState({isEditing : true})} />
		      </div>
  		)
  	}
  }
}

/////////REACT - var 3 ///////
 1. import addProduct in ProductList
 import AddProduct from './AddProduct.js';
export default AddProduct; - nu uita sa ai asta in clasa exportata la final 
in render trebuie sa arate asa :
 render(){
        return(
            <div>
				<AddProduct/>
            </div>
        )
    }

2.Componenta `AddProduct` trebuie sa contina 3 elemente de tip input cu `id-ul` si `name-ul`: `name`, `category`, `price`;
 3. Componenta `AddProduct` trebuie sa contina un element input de tip buton `button` cu valoarea `add product`, folosit pentru a apela metoda `addProduct`;
 //render afiseaza info - in cazul asta returneaza div cu inputuri
  render(){
        return (
            <div>
            <input  id="name" onChange={this.handleChangeName} name="name" />
            <input  id="category" onChange={this.handleChangeCategory} name="category"/>
              <input id="price" onChange={this.handleChangePrice} name="price"/>
             <button value="add product" onClick={this.addProduct}>Add product</button>
            </div>
        )
    }
	//asa arata o functie predefinita. ca sa construiesti propria ta functie stergi this.props.onAdd
	 addProduct = () => {
        let product = {
            name: this.state.name,
            category: this.state.category,
            price: this.state.price
        };
        this.props.onAdd(product);
    }
    


4. Componenta `AddProduct` din interiorul componentei `ProductList` trebuie sa contina in `props` metoda `onAdd`;
5. La apasarea butonului `add product` un nou element trebuie afisat in componenta `ProductList`;
 render(){
        return(
            <div>
				<AddProduct onAdd={this.addProduct} />
            </div>
        )
    }

6. functie pt validare produs
        this.addProduct = (product) => {
			this.setState( prevState => ({
                products: [...prevState.products, product]
            }));
		}



//////// REACT v2 - 2019 /////////
1. import componenta RobotForm in RobotList
in RobotForm : export default RobotForm
in RobotList : import RobotForm from './RobotForm'
in render - div  - in  RobotList : <RobotForm/>

2. RobotForm ar să permită adăugarea unui robot
	render() {
		return (
			<div>
				 
				{
					this.state.robots.map((e, i) => 
						<Robot item={e} key={i} />
					)
				}
				<RobotForm onAdd={this.addRobot} />  //onAdd este metoda definita in RobotForm
			</div>
		)
	}

metoda onAdd - definita in RobotForm 
render() {
		return (
			<div>
				<label htmlFor="type">Type</label>
				<input type="text" id="type" name="type" onChange={this.handleChange} />
				<label htmlFor="name">Name</label>
				<input type="name" id="name" name="name" onChange={this.handleChange} />
				<label htmlFor="mass">Mass</label>
				<input type="text" id="mass" name="mass" onChange={this.handleChange} />
				<input type="button" value="add" onClick={() => this.props.onAdd({  // <- aici
					name : this.state.name,
					type : this.state.type,
					mass : this.state.mass
				})} />
			</div>
		)
	}
